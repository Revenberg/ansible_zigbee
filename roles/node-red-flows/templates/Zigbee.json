[
    {
        "id": "5cb96938.ddd258",
        "type": "tab",
        "label": "Zigbee",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4097c06d.1bfe4",
        "type": "tab",
        "label": "Netwerk",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fbb9c116.583fb",
        "type": "tab",
        "label": "Slack",
        "disabled": false,
        "info": ""
    },
    {
        "id": "54720da2.31fe84",
        "type": "zigbee2mqtt-server",
        "z": "",
        "name": "Zigbee",
        "host": "localhost",
        "mqtt_port": "1883",
        "mqtt_username": "",
        "mqtt_password": "",
        "tls": "",
        "usetls": false,
        "base_topic": "zigbee2mqtt"
    },
    {
        "id": "ac5435ab.ce7598",
        "type": "ui_tab",
        "z": "",
        "name": "Quick Overview",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "fb0248e0.17bda8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "769db11.ae0b35",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "ac5435ab.ce7598",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3cc250b7.c81dd",
        "type": "ui_group",
        "z": "",
        "name": "Latency Guage",
        "tab": "e792fa71.415768",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "e3c4b049.9ac",
        "type": "ui_group",
        "z": "",
        "name": "SERVER RACK",
        "tab": "e792fa71.415768",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "e792fa71.415768",
        "type": "ui_tab",
        "z": "",
        "name": "Quick Overview",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "62cf5dc4.f5deb4",
        "type": "mqtt-broker",
        "broker": "localhost",
        "port": "1883"
    },
    {
        "id": "4ec1ae6.5ee7c5",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "606c92e8.3b8f6c",
        "type": "ui_tab",
        "z": "",
        "name": "Thuis",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5b148da4.232e64",
        "type": "ui_group",
        "z": "",
        "name": "Thuis",
        "tab": "606c92e8.3b8f6c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b8724f6a.d92c3",
        "type": "slackbot-controller",
        "z": "",
        "name": "revenberg_nodered",
        "bot_token": "{{ slack_token }}"
    },
    {
        "id": "e59a32fb.71397",
        "type": "zigbee2mqtt-bridge",
        "z": "5cb96938.ddd258",
        "name": "Zigbee",
        "server": "54720da2.31fe84",
        "topic": null,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "bee46435.5cc8e8"
            ]
        ]
    },
    {
        "id": "bee46435.5cc8e8",
        "type": "debug",
        "z": "5cb96938.ddd258",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 200,
        "wires": []
    },
    {
        "id": "d560623c.b0159",
        "type": "zigbee2mqtt-out",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "0x842e14fffe2a3505",
        "device_id": "0x842e14fffe2a3505",
        "command": "state",
        "commandType": "z2m_cmd",
        "payload": "payload",
        "payloadType": "msg",
        "transition": 0,
        "x": 820,
        "y": 320,
        "wires": []
    },
    {
        "id": "fa606300.4ac2b",
        "type": "inject",
        "z": "5cb96938.ddd258",
        "name": "",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "d560623c.b0159"
            ]
        ]
    },
    {
        "id": "77790809.15a818",
        "type": "inject",
        "z": "5cb96938.ddd258",
        "name": "",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "x": 530,
        "y": 400,
        "wires": [
            [
                "d560623c.b0159"
            ]
        ]
    },
    {
        "id": "120a7dce.55ace2",
        "type": "inject",
        "z": "5cb96938.ddd258",
        "name": "",
        "topic": "",
        "payload": "toggle",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "6",
        "x": 530,
        "y": 460,
        "wires": [
            [
                "ebd149f0.211128"
            ]
        ]
    },
    {
        "id": "3b9d34a1.4fdcfc",
        "type": "zigbee2mqtt-get",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "",
        "device_id": "0x7cb03eaa0a079953",
        "state": "0",
        "x": 1420,
        "y": 400,
        "wires": [
            [
                "5752de28.e88d5"
            ]
        ]
    },
    {
        "id": "ff5ad67e.5e4958",
        "type": "inject",
        "z": "5cb96938.ddd258",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "3b9d34a1.4fdcfc",
                "d7143533.917628",
                "ef388517.e33128",
                "a02295c7.663918"
            ]
        ]
    },
    {
        "id": "5752de28.e88d5",
        "type": "debug",
        "z": "5cb96938.ddd258",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1690,
        "y": 400,
        "wires": []
    },
    {
        "id": "ae428754.082848",
        "type": "inject",
        "z": "5cb96938.ddd258",
        "name": "",
        "topic": "",
        "payload": "0,255,0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "25",
        "x": 530,
        "y": 600,
        "wires": [
            [
                "fac21a87.1059c8",
                "dca33b3f.87c998"
            ]
        ]
    },
    {
        "id": "fac21a87.1059c8",
        "type": "zigbee2mqtt-out",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "",
        "device_id": "0x7cb03eaa0a079953",
        "command": "color_rgb",
        "commandType": "z2m_cmd",
        "payload": "payload",
        "payloadType": "msg",
        "transition": 0,
        "x": 800,
        "y": 600,
        "wires": []
    },
    {
        "id": "e7b4e59d.f69138",
        "type": "inject",
        "z": "5cb96938.ddd258",
        "name": "",
        "topic": "",
        "payload": "255,255,240",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "x": 550,
        "y": 680,
        "wires": [
            [
                "fac21a87.1059c8",
                "dca33b3f.87c998"
            ]
        ]
    },
    {
        "id": "d7143533.917628",
        "type": "zigbee2mqtt-get",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "0x842e14fffe2a3505",
        "device_id": "0x842e14fffe2a3505",
        "state": "0",
        "x": 1420,
        "y": 460,
        "wires": [
            [
                "38e0deba.ffc822"
            ]
        ]
    },
    {
        "id": "ebd149f0.211128",
        "type": "zigbee2mqtt-out",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "0x842e14fffe2a3505",
        "device_id": "0x842e14fffe2a3505",
        "command": "state",
        "commandType": "z2m_cmd",
        "payload": "payload",
        "payloadType": "msg",
        "transition": 0,
        "x": 820,
        "y": 380,
        "wires": []
    },
    {
        "id": "dca33b3f.87c998",
        "type": "zigbee2mqtt-out",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "0x842e14fffe2a3505",
        "device_id": "0x842e14fffe2a3505",
        "command": "color_rgb",
        "commandType": "z2m_cmd",
        "payload": "payload",
        "payloadType": "msg",
        "transition": 0,
        "x": 800,
        "y": 540,
        "wires": []
    },
    {
        "id": "cbfacb91.2a20e8",
        "type": "zigbee2mqtt-bridge",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "topic": null,
        "x": 1450,
        "y": 60,
        "wires": [
            [
                "6d358045.b9835"
            ]
        ]
    },
    {
        "id": "6d358045.b9835",
        "type": "debug",
        "z": "5cb96938.ddd258",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1670,
        "y": 60,
        "wires": []
    },
    {
        "id": "a02295c7.663918",
        "type": "zigbee2mqtt-get",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "Coordinator",
        "device_id": "0x00124b0014d9b724",
        "state": "0",
        "x": 1390,
        "y": 340,
        "wires": [
            [
                "ad265771.9b3d58"
            ]
        ]
    },
    {
        "id": "ef388517.e33128",
        "type": "zigbee2mqtt-get",
        "z": "5cb96938.ddd258",
        "name": "",
        "server": "54720da2.31fe84",
        "friendly_name": "0x00124b0018e2a303",
        "device_id": "0x00124b0018e2a303",
        "state": "0",
        "x": 1420,
        "y": 540,
        "wires": [
            [
                "2d62b2df.dfceee"
            ]
        ]
    },
    {
        "id": "38e0deba.ffc822",
        "type": "debug",
        "z": "5cb96938.ddd258",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1690,
        "y": 460,
        "wires": []
    },
    {
        "id": "2d62b2df.dfceee",
        "type": "debug",
        "z": "5cb96938.ddd258",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1690,
        "y": 540,
        "wires": []
    },
    {
        "id": "ad265771.9b3d58",
        "type": "debug",
        "z": "5cb96938.ddd258",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1690,
        "y": 340,
        "wires": []
    },
    {
        "id": "c805f17e.056db",
        "type": "catch",
        "z": "4097c06d.1bfe4",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 2200,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "9140c24a.7d508",
        "type": "catch",
        "z": "fbb9c116.583fb",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 2200,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "c6b65cc3.e2fb8",
        "type": "mqtt in",
        "z": "4097c06d.1bfe4",
        "name": "Sander presence",
        "topic": "wifi/192.168.2.70",
        "qos": "2",
        "datatype": "json",
        "broker": "4ec1ae6.5ee7c5",
        "x": 300,
        "y": 400,
        "wires": [
            [
                "847b6cd2.22353"
            ]
        ]
    },
    {
        "id": "29699bc4.0a9354",
        "type": "arp",
        "z": "4097c06d.1bfe4",
        "name": "ARP",
        "macs": "",
        "x": 310,
        "y": 160,
        "wires": [
            [
                "91a5419d.5cffe"
            ]
        ]
    },
    {
        "id": "61a8f937.187f78",
        "type": "inject",
        "z": "4097c06d.1bfe4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "29699bc4.0a9354"
            ]
        ]
    },
    {
        "id": "91a5419d.5cffe",
        "type": "split",
        "z": "4097c06d.1bfe4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 160,
        "wires": [
            [
                "fa97508d.65a29"
            ]
        ]
    },
    {
        "id": "31aa8404.bc68dc",
        "type": "adv ping",
        "z": "4097c06d.1bfe4",
        "name": "",
        "host": "",
        "x": 900,
        "y": 160,
        "wires": [
            [
                "75a21b75.33d2d4"
            ]
        ]
    },
    {
        "id": "fa97508d.65a29",
        "type": "function",
        "z": "4097c06d.1bfe4",
        "name": "Analyze Result 2",
        "func": "// anything stored in context is kept available for next time we get called\ncontext.ip = \"\";\n\nif(msg.payload) {\n    if(msg.payload.ip) {\n    context.ip = msg.payload.ip;\n    }\n} \n\nmsg.host=context.ip;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 160,
        "wires": [
            [
                "31aa8404.bc68dc"
            ]
        ]
    },
    {
        "id": "75a21b75.33d2d4",
        "type": "function",
        "z": "4097c06d.1bfe4",
        "name": "Analyze Result",
        "func": "// anything stored in context is kept available for next time we get called\n_context = {};\n\n_context.ip = msg._payload.ip;\n\nif(msg.payload) {\n  _context.pingresponse = msg.payload;\n  _context.home = 'Home';\n \n  flow.set(msg._payload.ip + 'status', \"Home\");\n}\n\nmsg.payload = _context;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 160,
        "wires": [
            [
                "dbf4df8a.30c3f"
            ]
        ]
    },
    {
        "id": "70360627.54b658",
        "type": "mqtt out",
        "z": "4097c06d.1bfe4",
        "name": "Send info to mqtt",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "4ec1ae6.5ee7c5",
        "x": 1690,
        "y": 160,
        "wires": []
    },
    {
        "id": "847b6cd2.22353",
        "type": "function",
        "z": "4097c06d.1bfe4",
        "name": "",
        "func": "\nhome = 0;\nif(msg.payload) {\n    if(msg.payload.home == \"Home\") {\n        home = 2;\n    } else {\n        if(msg.payload.count) {\n            home = 1;\n        }\n    }\n}\nmsg.payload = home;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 400,
        "wires": [
            [
                "e419a166.2965e"
            ]
        ]
    },
    {
        "id": "e419a166.2965e",
        "type": "ui_led",
        "z": "4097c06d.1bfe4",
        "group": "5b148da4.232e64",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Sander",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "orange",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "green",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 670,
        "y": 400,
        "wires": []
    },
    {
        "id": "61fe4b7c.6de8e4",
        "type": "mqtt in",
        "z": "4097c06d.1bfe4",
        "name": "Bonny presence",
        "topic": "wifi/192.168.2.72",
        "qos": "2",
        "datatype": "json",
        "broker": "4ec1ae6.5ee7c5",
        "x": 300,
        "y": 480,
        "wires": [
            [
                "ccd95f3f.9d9e8"
            ]
        ]
    },
    {
        "id": "d1267e16.59751",
        "type": "mqtt in",
        "z": "4097c06d.1bfe4",
        "name": "Jelmar presence",
        "topic": "wifi/192.168.2.71",
        "qos": "2",
        "datatype": "json",
        "broker": "4ec1ae6.5ee7c5",
        "x": 300,
        "y": 560,
        "wires": [
            [
                "c8a6ecdf.4520e"
            ]
        ]
    },
    {
        "id": "71857113.f0a52",
        "type": "debug",
        "z": "4097c06d.1bfe4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1990,
        "y": 380,
        "wires": []
    },
    {
        "id": "cffbfc7e.33de",
        "type": "switch",
        "z": "4097c06d.1bfe4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "192.168.2.70",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "\"wifi/192.168.2.70",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1810,
        "y": 380,
        "wires": [
            [
                "71857113.f0a52"
            ],
            [
                "71857113.f0a52"
            ]
        ]
    },
    {
        "id": "dbf4df8a.30c3f",
        "type": "function",
        "z": "4097c06d.1bfe4",
        "name": "Determine status",
        "func": "// anything stored in context is kept available for next time we get called\n\n//_payload = {};\n_payload = msg.payload;\ndefault_count = 30 * 4;\n\nif(msg.payload.pingresponse) {\n  _payload.count = default_count;\n  context.set(msg.payload.ip + 'count', _payload.count);\n} else {\n    _payload.home = flow.get(msg.payload.ip + 'status') || \"Home\";\n    if (_payload.home == \"Home\") {\n        count = (flow.get(msg.payload.ip + 'count') || default_count);\n        _payload.count = count - 1;\n        flow.set(msg.payload.ip + 'count', _payload.count);\n        if (count <= 1) {\n            flow.set(msg.payload.ip + 'status', \"Away\");\n            _payload.home = \"Away\";\n        }\n    }\n}\n\nmsg.topic = \"wifi/\" + msg.payload.ip;\nmsg.payload = _payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 160,
        "wires": [
            [
                "70360627.54b658",
                "cffbfc7e.33de"
            ]
        ]
    },
    {
        "id": "ccd95f3f.9d9e8",
        "type": "function",
        "z": "4097c06d.1bfe4",
        "name": "",
        "func": "\nhome = 0;\nif(msg.payload) {\n    if(msg.payload.home == \"Home\") {\n        home = 2;\n    } else {\n        if(msg.payload.count) {\n            home = 1;\n        }\n    }\n}\nmsg.payload = home;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 480,
        "wires": [
            [
                "6bf90387.86f05c"
            ]
        ]
    },
    {
        "id": "6bf90387.86f05c",
        "type": "ui_led",
        "z": "4097c06d.1bfe4",
        "group": "5b148da4.232e64",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Bonny",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "orange",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "green",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 670,
        "y": 480,
        "wires": []
    },
    {
        "id": "c8a6ecdf.4520e",
        "type": "function",
        "z": "4097c06d.1bfe4",
        "name": "",
        "func": "\nhome = 0;\nif(msg.payload) {\n    if(msg.payload.home == \"Home\") {\n        home = 2;\n    } else {\n        if(msg.payload.count) {\n            home = 1;\n        }\n    }\n}\nmsg.payload = home;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 560,
        "wires": [
            [
                "21970506.6fe07a"
            ]
        ]
    },
    {
        "id": "21970506.6fe07a",
        "type": "ui_led",
        "z": "4097c06d.1bfe4",
        "group": "5b148da4.232e64",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Jelmar",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "orange",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "green",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 670,
        "y": 560,
        "wires": []
    },
    {
        "id": "cd34d82.b192328",
        "type": "slackbot-reply",
        "z": "fbb9c116.583fb",
        "slackbot": "b8724f6a.d92c3",
        "name": "revenberg_nodered",
        "x": 720,
        "y": 300,
        "wires": []
    },
    {
        "id": "e7dee98f.8d3368",
        "type": "inject",
        "z": "fbb9c116.583fb",
        "name": "",
        "topic": "",
        "payload": "{\"channel\":\"node-red\",\"text\":\"Mijn test 1948\"}",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 290,
        "y": 300,
        "wires": [
            [
                "6a9ffbf.0307d04"
            ]
        ]
    },
    {
        "id": "6a9ffbf.0307d04",
        "type": "function",
        "z": "fbb9c116.583fb",
        "name": "",
        "func": "msg.topic = \"chat.meMessage\";\nmsg.payload = {\n    channel: \"node-red\",\n    text: \"Mijn test 1948\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 280,
        "wires": [
            [
                "cd34d82.b192328"
            ]
        ]
    }
]