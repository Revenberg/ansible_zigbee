version: '3.8'

services:
  p1logger:
    image: revenberg/solarrs485logger
    container_name: solarrs485logger
    restart: always
    network_mode: host

  influxdb:
    image: hypriot/rpi-influxdb
    container_name: influxdb
    environment:
     - INFLUXDB_INIT_PWD="password"
     - PRE_CREATE_DB="power"
    ports:
     - "8083:8083"
     - "8086:8086"
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/influxdb/data
      - ./data/influxdb/data:/var/lib/influxdb  

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - 'env.grafana'
    user: "0"
    links:
      - influxdb
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - .data/grafana/data:/var/lib/grafana

#  mqtt:
#    image: "eclipse-mosquitto:latest"
#    environment:
#      - TZ=Europe/Amsterdam
#      - "MQTT_BROKER_URL=mqtt://127.0.0.1"
#    ports:
#      - 1883:1883
#      - 9001:9001
#    user: "1000:1000"
#    volumes:
#      - ./data/mqtt/config:/mosquitto/config
#      - ./data/mqtt/data:/mosquitto/data
#      - ./data/mqtt/log:/mosquitto/log
#    restart: always
#    network_mode: host
  dsmrdb:
    # When using Postgres, release 12.x is supported only
    # due to the limited availability of client packages, especially for arm32v7
    image: postgres:12
    restart: always
    volumes:
      - ./data/dsmrdb:/var/lib/postgresql/data
    environment:
      - TZ=Europe/Amsterdam
      - PG_TZ=Europe/Amsterdam
      - POSTGRES_USER=dsmrreader
      - POSTGRES_PASSWORD=dsmrreader
      - POSTGRES_DB=dsmrreader

  dsmr:
#    build: .
    image: xirixiz/dsmr-reader-docker:latest
    depends_on:
      - dsmrdb
    cap_add:
      - NET_ADMIN
    restart: always
    volumes:
      - ./data/dsmr_backups:/dsmr/backups
    environment:
      - DJANGO_TIME_ZONE=Europe/Amsterdam
      - VIRTUAL_HOST=localhost
    ports:
      - 80:80
      - 443:443
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0

#volumes:
#   dsmrdb:
#   dsmrdb_backups:
  